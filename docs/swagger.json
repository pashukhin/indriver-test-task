{
    "swagger": "2.0",
    "info": {
        "description": "Implementation of inDriver test task.",
        "title": "inDriver test task",
        "contact": {
            "name": "Grigoriy Pashukhin",
            "url": "https://github.com/pashukhin"
        },
        "license": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/car_model": {
            "get": {
                "description": "get car modles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car_model"
                ],
                "summary": "List car models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CarModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "model.CarModel": {
            "type": "object",
            "required": [
                "mark",
                "model"
            ],
            "properties": {
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                }
            }
        }
    }
}